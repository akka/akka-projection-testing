include "application"

akka {
  persistence {

    journal.plugin = "akka.persistence.cassandra.journal"
    snapshot-store.plugin = "akka.persistence.cassandra.snapshot"

    cassandra {
      journal {
        keyspace = "akka_testing"
      }

      snapshot {
        keyspace = "akka_testing"
      }

      events-by-tag {
        bucket-size = "Hour"
        # for reduced latency
        eventual-consistency-delay = 250ms
        flush-interval = 0ms
        # the batch-size and flush-interval might need tuning
        max-message-batch-size = 20
        pubsub-notification = on
        first-time-bucket = "20230126T00:00"
      }

      query {
        refresh-interval = 2s
      }

      # don't use autocreate in production
      journal.keyspace-autocreate = on
      journal.tables-autocreate = on
      snapshot.keyspace-autocreate = on
      snapshot.tables-autocreate = on

      cleanup {
        dry-run = false
      }
    }
  }
}

datastax-java-driver {
  advanced.reconnect-on-init = on
}

# projection offset is with jdbc
akka {
  projection {
    jdbc {
      dialect = "postgres-dialect"
      offset-store {
        schema = ""
      }
      blocking-jdbc-dispatcher {
        type = Dispatcher
        executor = "thread-pool-executor"
        thread-pool-executor {
          fixed-pool-size = 5
        }
      }
    }
  }
}

# results are written with jdbc
jdbc-connection-settings {
  driver = "org.postgresql.Driver"

  url = "jdbc:postgresql://localhost:5432/postgres?reWriteBatchedInserts=true"
  user = postgres
  password = postgres
}
